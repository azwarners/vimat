{"changed":true,"filter":false,"title":"listOfLists.js","tooltip":"/VIMAT/js/listOfLists.js","value":"/*\n\t******************************************************************\n\t Copyright 2013 Nicholas Warner\n\n\t This file is part of vimat.\n\n    vimat is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    vimat is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with vimat.  If not, see <http://www.gnu.org/licenses/>.\n\t******************************************************************\n*/\n\nvar VIMAT = VIMAT || {};\n\n// List of Lists\nVIMAT.namespace(\"VIMAT.MODEL.LISTS\");\nVIMAT.MODEL.LISTS.ListItem = function(d) {\n    this.description = d,\n    this.checked = false;\n};   \nVIMAT.MODEL.LISTS.ListItem.prototype.getChecked = function () {\n    return this.checked;\n};\nVIMAT.MODEL.LISTS.ListItem.prototype.setChecked = function (b) {\n    this.checked = b;\n};\nVIMAT.MODEL.LISTS.ListItem.prototype.getDescription = function () {\n    return this.description;\n};\nVIMAT.MODEL.LISTS.ListItem.prototype.setDescription = function (d) {\n    this.description = d;\n};\nVIMAT.MODEL.LISTS.List = function(n) {\n    this.arrayContent = [];\n    this.name = n;\n    this.keepItemsAfterCheckedOff = true;\n    this.trashCan = [];\n};\nVIMAT.MODEL.LISTS.List.prototype.getName = function () {\n    return this.name;\n};\nVIMAT.MODEL.LISTS.List.prototype.setName = function (n) {\n    this.name = n;\n};\nVIMAT.MODEL.LISTS.List.prototype.getKeepItemsAfterCheckedOff = function () {\n    return this.keepItemsAfterCheckedOff;\n};\nVIMAT.MODEL.LISTS.List.prototype.setKeepItemsAfterCheckedOff = function (b) {\n    this.keepItemsAfterCheckedOff = b;\n};\nVIMAT.MODEL.LISTS.List.prototype.setCheckedAll = function (b) {\n    var i, l = this.arrayContent.length;\n    for (i = 0; i < l; i++) {\n        this.arrayContent[i].setChecked(b);\n    }\n};\nVIMAT.MODEL.LISTS.List.prototype.getListItemAt = function (index) {\n    return this.arrayContent[index];\n};\nVIMAT.MODEL.LISTS.List.prototype.removeListItemAt = function (index) {\n    this.trashCan.push(this.arrayContent[index]);\n    this.arrayContent.splice(index, 1);\n};\nVIMAT.MODEL.LISTS.List.prototype.addListItem = function (li) {\n    this.arrayContent.push(li);\n};\nVIMAT.MODEL.LISTS.List.prototype.deleteOrRestoreTrash = function () {\n    var i, l = this.trashCan.length;\n    for (i = 0; i < l; i++) {\n        if (this.keepItemsAfterCheckedOff) {\n            this.arrayContent.push(this.trashCan[i]);\n            this.trashCan.splice(i, 1);\n        }\n        else {\n            this.trashCan.splice(i, 1);\n        }\n    }\n};\nVIMAT.MODEL.LISTS.List.prototype.moveCheckedItemsToTrash = function () {\n    var i, l = this.arrayContent.length;\n    for (i = 0; i < l; i++) {\n        if (this.arrayContent[i].getChecked()) {\n            this.removeListItemAt(i);\n        }\n    }\n};\nVIMAT.MODEL.LISTS.List.prototype.getLength = function () {\n    return this.arrayContent.length;\n};\nVIMAT.MODEL.LISTS.listOfLists = (function () {\n    // *** Dependencies\n\n    // *** Private Properties\n    var arrayContent = [];\n\n    // *** Private methods\n    function addList(vimatList) {\n        arrayContent.push(vimatList);\n    }\n    function addItemToCurrentList(li) {\n        arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].addListItem(li);\n    }\n    function getListAt(index) {\n        return arrayContent[index];\n    }\n    function getListNameAt(index) {\n        return arrayContent[index].getName();\n    }\n    function removeListAt(index) {\n        arrayContent.splice(index, 1);\n    }\n    function getNumberOfLists() {\n        return arrayContent.length;\n    }\n    function getListOfListNames() {\n        var l = arrayContent.length,\n            loln = [],\n            i;\n        for (i = 0; i < l; i++) {\n            loln.push(arrayContent[i].getName());\n        }\n        return loln;\n    }\n    function getListByListName(ln) {\n        var l = arrayContent.length,\n            i,\n            list;\n        for (i = 0; i < l; i++) {\n            if (arrayContent[i].getName() === ln) {\n                list = arrayContent[i];\n            }\n        }\n        return list;\n    }\n    function toggleCheckStateOfItemInCurrentListById(id) {\n        if (arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].getListItemAt(id).getChecked()) {\n            arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].getListItemAt(id).unCheck();\n        }\n        else {\n            arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].getListItemAt(id).unCheck();\n        }\n    }\n    \n    // *** Initialization\n\n    // *** Public API\n    return {\n        addList:                                    addList,\n        addItemToCurrentList:                       addItemToCurrentList,\n        getListAt:                                  getListAt,\n        getListNameAt:                              getListNameAt,\n        removeListAt:                               removeListAt,\n        getNumberOfLists:                           getNumberOfLists,\n        getListOfListNames:                         getListOfListNames,\n        getListByListName:                          getListByListName,\n        toggleCheckStateOfItemInCurrentListById:    toggleCheckStateOfItemInCurrentListById\n    };\n}());","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":166,"column":5},"action":"insert","lines":["/*","\t******************************************************************","\t Copyright 2013 Nicholas Warner","","\t This file is part of vimat.","","    vimat is free software: you can redistribute it and/or modify","    it under the terms of the GNU General Public License as published by","    the Free Software Foundation, either version 3 of the License, or","    (at your option) any later version.","","    vimat is distributed in the hope that it will be useful,","    but WITHOUT ANY WARRANTY; without even the implied warranty of","    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the","    GNU General Public License for more details.","","    You should have received a copy of the GNU General Public License","    along with vimat.  If not, see <http://www.gnu.org/licenses/>.","\t******************************************************************","*/","","var VIMAT = VIMAT || {};","","// List of Lists","VIMAT.namespace(\"VIMAT.MODEL.LISTS\");","VIMAT.MODEL.LISTS.ListItem = function(d) {","    this.description = d,","    this.checked = false;","};   ","VIMAT.MODEL.LISTS.ListItem.prototype.getChecked = function () {","    return this.checked;","};","VIMAT.MODEL.LISTS.ListItem.prototype.setChecked = function (b) {","    this.checked = b;","};","VIMAT.MODEL.LISTS.ListItem.prototype.getDescription = function () {","    return this.description;","};","VIMAT.MODEL.LISTS.ListItem.prototype.setDescription = function (d) {","    this.description = d;","};","VIMAT.MODEL.LISTS.List = function(n) {","    this.arrayContent = [];","    this.name = n;","    this.keepItemsAfterCheckedOff = true;","    this.trashCan = [];","};","VIMAT.MODEL.LISTS.List.prototype.getName = function () {","    return this.name;","};","VIMAT.MODEL.LISTS.List.prototype.setName = function (n) {","    this.name = n;","};","VIMAT.MODEL.LISTS.List.prototype.getKeepItemsAfterCheckedOff = function () {","    return this.keepItemsAfterCheckedOff;","};","VIMAT.MODEL.LISTS.List.prototype.setKeepItemsAfterCheckedOff = function (b) {","    this.keepItemsAfterCheckedOff = b;","};","VIMAT.MODEL.LISTS.List.prototype.setCheckedAll = function (b) {","    var i, l = this.arrayContent.length;","    for (i = 0; i < l; i++) {","        this.arrayContent[i].setChecked(b);","    }","};","VIMAT.MODEL.LISTS.List.prototype.getListItemAt = function (index) {","    return this.arrayContent[index];","};","VIMAT.MODEL.LISTS.List.prototype.removeListItemAt = function (index) {","    this.trashCan.push(this.arrayContent[index]);","    this.arrayContent.splice(index, 1);","};","VIMAT.MODEL.LISTS.List.prototype.addListItem = function (li) {","    this.arrayContent.push(li);","};","VIMAT.MODEL.LISTS.List.prototype.deleteOrRestoreTrash = function () {","    var i, l = this.trashCan.length;","    for (i = 0; i < l; i++) {","        if (this.keepItemsAfterCheckedOff) {","            this.arrayContent.push(this.trashCan[i]);","            this.trashCan.splice(i, 1);","        }","        else {","            this.trashCan.splice(i, 1);","        }","    }","};","VIMAT.MODEL.LISTS.List.prototype.moveCheckedItemsToTrash = function () {","    var i, l = this.arrayContent.length;","    for (i = 0; i < l; i++) {","        if (this.arrayContent[i].getChecked()) {","            this.removeListItemAt(i);","        }","    }","};","VIMAT.MODEL.LISTS.List.prototype.getLength = function () {","    return this.arrayContent.length;","};","VIMAT.MODEL.LISTS.listOfLists = (function () {","    // *** Dependencies","","    // *** Private Properties","    var arrayContent = [];","","    // *** Private methods","    function addList(vimatList) {","        arrayContent.push(vimatList);","    }","    function addItemToCurrentList(li) {","        arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].addListItem(li);","    }","    function getListAt(index) {","        return arrayContent[index];","    }","    function getListNameAt(index) {","        return arrayContent[index].getName();","    }","    function removeListAt(index) {","        arrayContent.splice(index, 1);","    }","    function getNumberOfLists() {","        return arrayContent.length;","    }","    function getListOfListNames() {","        var l = arrayContent.length,","            loln = [],","            i;","        for (i = 0; i < l; i++) {","            loln.push(arrayContent[i].getName());","        }","        return loln;","    }","    function getListByListName(ln) {","        var l = arrayContent.length,","            i,","            list;","        for (i = 0; i < l; i++) {","            if (arrayContent[i].getName() === ln) {","                list = arrayContent[i];","            }","        }","        return list;","    }","    function toggleCheckStateOfItemInCurrentListById(id) {","        if (arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].getListItemAt(id).getChecked()) {","            arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].getListItemAt(id).unCheck();","        }","        else {","            arrayContent[VIMAT.SETTINGS.listOfLists.getCurrentListIndex()].getListItemAt(id).unCheck();","        }","    }","    ","    // *** Initialization","","    // *** Public API","    return {","        addList:                                    addList,","        addItemToCurrentList:                       addItemToCurrentList,","        getListAt:                                  getListAt,","        getListNameAt:                              getListNameAt,","        removeListAt:                               removeListAt,","        getNumberOfLists:                           getNumberOfLists,","        getListOfListNames:                         getListOfListNames,","        getListByListName:                          getListByListName,","        toggleCheckStateOfItemInCurrentListById:    toggleCheckStateOfItemInCurrentListById","    };","}());"]}]}]]},"ace":{"folds":[{"start":{"row":0,"column":2},"end":{"row":19,"column":0},"placeholder":"..."}],"scrolltop":633.0000281333923,"scrollleft":0,"selection":{"start":{"row":166,"column":5},"end":{"row":166,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1417504412459}