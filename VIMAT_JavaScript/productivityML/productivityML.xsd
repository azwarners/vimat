<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
targetNamespace="http://www.w3schools.com"
xmlns="http://www.w3schools.com"
elementFormDefault="qualified">

<!--******************************************************************-->
	<!-- Copyright 2012 Nicholas Warner

	 This file is part of freeIPE.

    freeIPE is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    freeIPE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with freeIPE.  If not, see <http://www.gnu.org/licenses/>. -->
<!--******************************************************************-->

	<!--This is described as the salami slice design
			in New Perspectives on XML by Patrick Carey. -->

	<!--All elements are children of the root. This makes everything global.
			This is done in an attempt to make the data more accessible.
			New elements can contain previously declared global elements,
			which could be useful for the new data structure of a future plug-in
			that wishes to access all of the data.-->

	<!-- One drawback I see to this design is the fact that most people are
			used to seeing a nested structure in an XML file. I'm not
			exactly sure if this could scale very well without being
			a visual nightmare. Without indentation or comments it's
			just a really long list of tags.-->
	
	<xs:element name="tools">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="lists" />
				<xs:element ref="calendar" />
				<xs:element ref="timeTracker" />
				<xs:element ref="notepad" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="lists">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="tasks" />
				<xs:element ref="projects" />
				<xs:element ref="contexts" />
				<xs:element ref="tags" />
				<xs:element ref="users" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="calendar">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="appointment" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="timeTracker">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="trackedTime" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="notepad">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="note" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="tasks">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="task" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="projects">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="project" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="contexts">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="context" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="tags">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="tag" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="users">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="user" minoccurs="0" maxoccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="appointment">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="scheduledTime" />
				<xs:choice>
					<xs:element ref="task" />					
					<xs:element ref="project" />					
					<xs:element ref="context" />					
					<xs:element ref="tag" />					
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="trackedTime">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="startTime" />
				<xs:element ref="endTime" />
				<xs:choice>
					<xs:element ref="task" />					
					<xs:element ref="project" />					
					<xs:element ref="context" />					
					<xs:element ref="tag" />					
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="project">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="complete" />
				<xs:element ref="description" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="context">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="description" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="tag">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="description" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="user">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="name" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="task">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="complete" />
				<xs:element ref="description" />
			</xs:sequence>
			<xs:all>
				<xs:element ref="project" />
				<xs:element ref="context" />
				<xs:element ref="tag" />
				<xs:element ref="user" />
			</xs:all>
		</xs:complexType>
	</xs:element>

	<xs:element name="complete" type="xs:boolean" default='false'/>
	<xs:element name="description" type="xs:string" />
	<xs:element name="name" type="xs:string" />
	<xs:element name="startTime" type="xs:dateTime" />
	<xs:element name="endTime" type="xs:dateTime" />
	<xs:element name="scheduledTime" type="xs:dateTime" />
	<xs:element name="note" type="xs:string" />

</xs:schema>
